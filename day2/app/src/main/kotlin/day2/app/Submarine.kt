/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package day2.app

class Submarine {
    fun pilot(commands: String): Int {
        val commandList = commands.split('\n').dropLast(1)
        val horizontalPosition = commandList.filter { it.contains("forward") }.sumOf { parseCommand(it) }
        val depth = commandList.filter {!it.contains("forward")}.sumOf {parseCommand(it)}
        return horizontalPosition * depth
    }

    fun pilot2(commands: String): Int {
        val commandList = commands.split('\n').dropLast(1)
        var aim = 0
        var depth = 0
        var horizontalPosition = 0
        commandList.forEach {
            val direction = it.split(" ")[0]
            if (direction == "forward") {
                horizontalPosition += parseCommand(it)
                depth += aim * parseCommand(it)
            } else {
                aim += parseCommand(it)
            }
        }
        return depth * horizontalPosition
    }

    private fun parseCommand(command: String): Int {
        val splitCommand = command.split(" ")
        val direction = splitCommand[0]
        val distance = splitCommand[1].toInt()
        return if (direction == "up") -distance else distance
    }
}
